<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE configuration>
<!-- configuration file for LogBack (slf4J implementation) See here for more 
	details: http://gordondickens.com/wordpress/2013/03/27/sawing-through-the-java-loggers/ -->
<configuration scan="true" scanPeriod="30 seconds">

	<contextListener class="ch.qos.logback.classic.jul.LevelChangePropagator">
		<resetJUL>true</resetJUL>
	</contextListener>

	<!-- To enable JMX Management -->
	<jmxConfigurator />
	
	<!-- STDOUT logger for development purposes -->
	<appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
		<encoder>
			<pattern>%gray(%d{HH:mm:ss.SSS}) %highlight(%-5level) [%cyan(%logger{0})] - %msg%n</pattern>
		</encoder>
	</appender>

     <!-- Daily rolling file appender for VBX -->
    <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <File>${catalina.base}/logs/HierarchyGenerator.log</File>

        <!--<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">-->
        <rollingPolicy class="ch.qos.logback.core.rolling.FixedWindowRollingPolicy">
            <FileNamePattern>${catalina.base}/logs/HierarchyGenerator.%i.log</FileNamePattern>
            <MinIndex>1</MinIndex>
      		<MaxIndex>7</MaxIndex>
        </rollingPolicy>
        <!-- daily rollover -->
        <triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
            <!-- or whenever the file size reaches 100MB -->
            <MaxFileSize>2MB</MaxFileSize>
   		</triggeringPolicy>

		<encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
			<pattern>%d{dd-MM} %d{HH:mm:ss.SSS} %-5level [%logger{0}] - %msg%n</pattern>
		</encoder>

	</appender>
	
	<!-- HierarchyGenerator -->
	<logger name="com.fabiosalvini.hierarchygenerator" level="debug" />
	
	<!-- Non vogliamo loggare tutte le schifezze di spring/hibernate -->
	<logger name="org.springframework" level="info" />
	
	<!-- Impostazioni di default -->
	<root level="info">
		<if condition='property("spring.profiles.active").equals("") || !property("spring.profiles.active").equals("production")'>
			<then>
				<appender-ref ref="STDOUT" />
				<appender-ref ref="FILE" />
			</then>
			<else>
				<appender-ref ref="FILE" />
			</else>
		</if>
	</root>

	<root level="debug">
		<if condition='property("spring.profiles.active").equals("") || !property("spring.profiles.active").equals("production")'>
			<then>
				<appender-ref ref="STDOUT" />
				<appender-ref ref="FILE" />
			</then>
			<else>
				<appender-ref ref="FILE" />
			</else>
		</if>
	</root>

	<root level="error">
		<if condition='property("spring.profiles.active").equals("") || !property("spring.profiles.active").equals("production")'>
			<then>
				<appender-ref ref="STDOUT" />
				<appender-ref ref="FILE" />
			</then>
			<else>
				<appender-ref ref="FILE" />
			</else>
		</if>
	</root>
</configuration>
